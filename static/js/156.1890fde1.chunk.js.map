{"version":3,"file":"static/js/156.1890fde1.chunk.js","mappings":"6UA0HA,EA3GqB,WACnB,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACA,GAAwCN,EAAAA,EAAAA,WAAS,GAAjD,eAAOO,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MAwBjB,OACE,+BACE,UAACC,EAAA,EAAD,CACEC,UAAU,OACVC,SAfwB,SAAAC,GAC5BA,EAAEC,iBAEGd,GAASE,GAAUE,IAIxBI,GAASO,EAAAA,EAAAA,IAAa,CAAEf,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KAZrCH,EAAQ,IACRE,EAAS,IACTE,EAAY,IAYb,EAOKW,GAAI,CACFC,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,WAAY,SACZC,IAAK,QART,WAWE,SAACC,EAAA,EAAD,CACEN,GAAI,CAAEO,MAAO,QACbC,UAAQ,EACRC,MAAM,YACNC,GAAG,yBACHC,MAAM,OACN3B,KAAK,OACL4B,MAAO5B,EACP6B,SAAU,SAAAhB,GAAC,OAAIZ,EAAQY,EAAEiB,OAAOF,MAArB,KAGb,SAACN,EAAA,EAAD,CACEN,GAAI,CAAEO,MAAO,QACbC,UAAQ,EACRC,MAAM,YACNC,GAAG,0BACHC,MAAM,QACN3B,KAAK,QACL4B,MAAO1B,EACP2B,SAAU,SAAAhB,GAAC,OAAIV,EAASU,EAAEiB,OAAOF,MAAtB,KAGb,UAACG,EAAA,EAAD,CACEf,GAAI,CAAEO,MAAO,QACbS,QAAQ,WACRP,MAAM,YACND,UAAQ,EAJV,WAME,SAACS,EAAA,EAAD,CAAYC,QAAQ,8BAApB,uBAGA,SAACC,EAAA,EAAD,CACET,GAAG,8BACHU,KAAM9B,EAAe,OAAS,WAC9BsB,MAAOxB,EACPyB,SAAU,SAAAhB,GAAC,OAAIR,EAAYQ,EAAEiB,OAAOF,MAAzB,EACXS,cACE,SAACC,EAAA,EAAD,CAAgBC,SAAS,MAAzB,UACE,SAACC,EAAA,EAAD,CACE,aAAW,6BACXC,QA3EgB,kBAAMlC,GAAgB,SAAAmC,GAAI,OAAKA,CAAL,GAA1B,EA4EhBC,YA3EgB,SAAA9B,GAC9BA,EAAEC,gBACH,EA0Ee8B,KAAK,MAJP,SAMGtC,GAAe,SAACuC,EAAA,EAAD,KAAoB,SAACC,EAAA,EAAD,QAI1CnB,MAAM,iBAIV,SAACoB,EAAA,EAAD,CACEtB,MAAM,YACNO,QAAQ,YACRI,KAAK,SACLpB,GAAI,CAAEO,MAAO,QAJf,0BAWP,C","sources":["pages/RegisterPage/RegisterPage.js"],"sourcesContent":["import {\n  Box,\n  Button,\n  FormControl,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  OutlinedInput,\n  TextField,\n} from '@mui/material';\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { registerUser } from 'redux/auth/authOperation';\n\nconst RegisterPage = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleClickShowPassword = () => setShowPassword(show => !show);\n  const handleMouseDownPassword = e => {\n    e.preventDefault();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  const handlerSubmitRegister = e => {\n    e.preventDefault();\n\n    if (!name || !email || !password) {\n      return;\n    }\n\n    dispatch(registerUser({ name, email, password }));\n    resetForm();\n  };\n\n  return (\n    <>\n      <Box\n        component=\"form\"\n        onSubmit={handlerSubmitRegister}\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center',\n          alignItems: 'center',\n          gap: '20px',\n        }}\n      >\n        <TextField\n          sx={{ width: '100%' }}\n          required\n          color=\"secondary\"\n          id=\"outlined-required-name\"\n          label=\"Name\"\n          name=\"name\"\n          value={name}\n          onChange={e => setName(e.target.value)}\n        />\n\n        <TextField\n          sx={{ width: '100%' }}\n          required\n          color=\"secondary\"\n          id=\"outlined-required-email\"\n          label=\"Email\"\n          name=\"email\"\n          value={email}\n          onChange={e => setEmail(e.target.value)}\n        />\n\n        <FormControl\n          sx={{ width: '100%' }}\n          variant=\"outlined\"\n          color=\"secondary\"\n          required\n        >\n          <InputLabel htmlFor=\"outlined-adornment-password\">\n            Password\n          </InputLabel>\n          <OutlinedInput\n            id=\"outlined-adornment-password\"\n            type={showPassword ? 'text' : 'password'}\n            value={password}\n            onChange={e => setPassword(e.target.value)}\n            endAdornment={\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle password visibility\"\n                  onClick={handleClickShowPassword}\n                  onMouseDown={handleMouseDownPassword}\n                  edge=\"end\"\n                >\n                  {showPassword ? <VisibilityOff /> : <Visibility />}\n                </IconButton>\n              </InputAdornment>\n            }\n            label=\"Password\"\n          />\n        </FormControl>\n\n        <Button\n          color=\"secondary\"\n          variant=\"contained\"\n          type=\"submit\"\n          sx={{ width: '100%' }}\n        >\n          Register\n        </Button>\n      </Box>\n    </>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["useState","name","setName","email","setEmail","password","setPassword","showPassword","setShowPassword","dispatch","useDispatch","Box","component","onSubmit","e","preventDefault","registerUser","sx","display","flexDirection","justifyContent","alignItems","gap","TextField","width","required","color","id","label","value","onChange","target","FormControl","variant","InputLabel","htmlFor","OutlinedInput","type","endAdornment","InputAdornment","position","IconButton","onClick","show","onMouseDown","edge","VisibilityOff","Visibility","Button"],"sourceRoot":""}